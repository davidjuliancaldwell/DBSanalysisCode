subset(dataPP,blockVec == c(1,3,5,7) & chanVec==chanInt)
subset(dataPP,blockVec == c(1,3,5,7))
a = subset(dataPP,blockVec == c(1,3,5,7) & chanVec==chanInt)
a
unique(a$blockVec)
dataPP
unique(dataPP$blockVec)
data=subset(dataPP,blockVec == c(1,3,5,7))
data
unique(data$blockVec)
data=subset(dataPP,blockVec == c(1,3,5,7) & chanVec==chanInt)
unique(data$blockVec)
chanVec
chanInt
chanVec
class(dataPP$chanVec)
class(chanInt)
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=subset(dataPP,blockVec == c(1,3,5,7) & chanVec==as.numeric(chanInt)))
data=subset(dataPP,blockVec == c(1,3,5,7) & chanVec==as.numeric(chanInt)))
data=subset(dataPP,blockVec == c(1,3,5,7) & chanVec==as.numeric(chanInt))
data
unique(dataPP$blockVec)
unique(data$blockVec)
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=dataPP[(dataPP$blockVec == c(1,3,5,7) & data$chanVec==as.numeric(chanInt)])
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=dataPP[dataPP$blockVec == c(1,3,5,7) & data$chanVec==as.numeric(chanInt)])
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=dataPP[dataPP$blockVec == c(1,3,5,7) & data$chanVec==chanInt])
dataPP[dataPP$blockVec == c(1,3,5,7) & data$chanVec==chanInt]
dataPP[dataPP$blockVec == c(1,3,5,7) & data$chanVec==chanInt]
data=dataPP[dataPP$blockVec == c(1,3,5,7) & dataPP$chanVec==chanInt]
dataPP[dataPP$blockVec == c(1,3,5,7) & dataPP$chanVec==chanInt]
dataPP[dataPP$blockVec == c(1,3,5,7)]
dataPP[dataPP$blockVec == 1]
dataPP[dataPP$blockVec == c(1,3,5,7) & dataPP$chanVec==chanInt,]
a = dataPP[dataPP$blockVec == c(1,3,5,7) & dataPP$chanVec==chanInt,]
unique(a$blockVec)
a = dataPP[dataPP$blockVec == (1data=dataPP[dataPP$blockVec in c(1,3,5,7) & dataPP$chanVec==chanInt,]) & dataPP$chanVec==chanInt,]
data=dataPP[dataPP$blockVec in c(1,3,5,7) & dataPP$chanVec==chanInt,]
data=dataPP[dataPP$blockVec %in% c(1,3,5,7) & dataPP$chanVec==chanInt,]
data
unique(data$blockVec)
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=dataPP[dataPP$blockVec %in% c(1,3,5,7) & dataPP$chanVec==chanInt,])
summary(fit.glm)
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=dataPP[dataPP$blockVec %in% c(1,3) & dataPP$chanVec==chanInt,])
summary(fit.glm)
blocksInt = c(1,3)
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,])
summary(fit.glm)
blocksInt = c(1,5)
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,])
summary(fit.glm)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,fill=factor(blockVec))) +
geom_violin() +  geom_smooth(method=lm, color='#2C3E50') + facet_grid(~blockVec)
p + labs(x = c("Stimulation current ",expression(mu),"muA"))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,fill=factor(blockVec))) +
geom_violin() +  geom_smooth(method=lm, color='#2C3E50') + facet_grid(~blockVec)
p
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,fill=factor(blockVec))) +
geom_jitter() +  geom_smooth(method=lm, color='#2C3E50') + facet_grid(~blockVec)
p
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,fill=factor(blockVec))) +
geom_jitter() +  geom_smooth(method=lm) + facet_grid(~blockVec)
p
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_grid(~blockVec)
p
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,fill=stimLevelVec)) +
geom_violin() +  geom_smooth(method=lm) + facet_grid(~blockVec)
p
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,fill=blockVec)) +
geom_violin() +  geom_smooth(method=lm) + facet_grid(~blockVec)
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,fill=blockVec)) +
geom_violin() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,fill=blockLevelVec)) +
geom_violin() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,fill=blockVec)) +
geom_violin() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
p
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=blockVec)) +
geom_violin() + geom_boxplot(width=0.1) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=blockVec)) +
geom_violin() + geom_boxplot(width=0.1) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p2
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=blockVec)) +
geom_violin() + facet_wrap(~blockVec)
p2
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=blockVec)) +
geom_violin() + facet_grid(~blockVec)
p2
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=blockVec)) +
geom_violin() + facet_wrap(~blockVec)
p2
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=blockVec)) +
geom_violin() + geom_boxplot(width=0.1) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p2
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=blockVec)) +
geom_violin() + geom_boxplot(width=0.1) +  geom_smooth(method=lm) + facet_wrap(~blockVec)  + scale_fill_brewer(palette="Dark2")
p2
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=blockVec)) +
geom_violin() + geom_boxplot(width=0.1) + facet_wrap(~blockVec)  + scale_fill_brewer(palette="Dark2")
p2
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=factor(blockVec)) +
p2
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=factor(blockVec))) +
p2
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=factor(blockVec))) +
geom_violin() + geom_boxplot(width=0.1) + facet_wrap(~blockVec)  + scale_fill_brewer(palette="Dark2")
p2
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=factor(blockVec))) +
geom_violin() + geom_boxplot(width=0.1) + facet_wrap(~blockVec)
p2
```{r fig.width=30 fig.asp=0.3}
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
```{r fig.width=40 fig.asp=0.3}
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=factor(blockVec))) +
geom_violin() + geom_boxplot(width=0.1) + facet_wrap(~blockVec)
p2
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=factor(blockVec))) +
geom_violin() + geom_boxplot(width=0.1) + facet_wrap(~blockVec)
p2
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter() +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter(width=0.25) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter(width=0.25) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
expression(paste("Stimulation current ",expression(mu),"muA"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter(width=0.25) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",expression(mu),"muA")))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter(width=0.25) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec,colour=stimLevelVec)) +
geom_jitter(width=0.25) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V")))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=0.25) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V")))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=0.25) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V")))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=1) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V")))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=25) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V")))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V")))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V")))
ggsave(paste0(sid,"_",chanInt,blocksInt,".png", dpi=600)
ggsave(paste0(sid,"_",chanInt,blocksInt,".png"), dpi=600)
paste0(sid,"_",chanInt,blocksInt,".png")
blocksInt
> string <- c("Hiphopopotamus", "Rhymenoceros", "time for bottomless lyrics")
string <- c("Hiphopopotamus", "Rhymenoceros", "time for bottomless lyrics")
string
string[1]
pattern <- "t.m"
greP9pattern,string)
grep(pattern,string)
paste0(sid,"_",chanInt,"_",paste0(blocksInt,sep = "_"),".png")
paste0(blocksInt,sep + "_")
paste0(blocksInt,sep = "_")
paste0(blocksInt,sep = "_")
paste(blocksInt,sep = "_")
paste(blocksInt,clllapse="_")
paste(blocksInt,collapse="_")
paste0(blocksInt,collapse="_")
ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"), dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V")))
ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"), dpi=600)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V")))
ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level"))
ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) + guides(colour=guide_legend("my awesome title"))
ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level"))
+ guides(colour=guide_legend("stimulation level"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) + guides(colour=guide_legend("stimulation level"))+theme(axis.title.y = element_text(size = rel(1.5), angle = 90))
ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level")) +
theme(axis.title.y = element_text(size = rel(1.5), angle = 90))
#ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"))
BaseThemeX90 <- function(base_size = 10) {
structure(list(
axis.line =         theme_blank(),
axis.text.x =       theme_text(size = base_size * 0.8 , lineheight = 0.9, colour = "grey50", hjust = 1, angle = 90),
axis.text.y =       theme_text(size = base_size * 0.8, lineheight = 0.9, colour = "grey50", hjust = 1),
axis.ticks =        theme_segment(colour = "grey50"),
axis.title.x =      theme_text(size = base_size),
axis.title.y =      theme_text(size = base_size, angle = 90),
axis.ticks.length = unit(0.15, "cm"),
axis.ticks.margin = unit(0.1, "cm"),
legend.background = theme_rect(colour=NA),
legend.key =        theme_rect(fill = "grey95", colour = "white"),
legend.key.size =   unit(1.2, "lines"),
legend.text =       theme_text(size = base_size * 0.7),
legend.title =      theme_text(size = base_size * 0.8, face = "bold", hjust = 0),
legend.position =   "right",
panel.background =  theme_rect(fill = "grey90", colour = NA),
panel.border =      theme_blank(),
panel.grid.major =  theme_line(colour = "white"),
panel.grid.minor =  theme_line(colour = "grey95", size = 0.25),
panel.margin =      unit(0.25, "lines"),
strip.background =  theme_rect(fill = "grey80", colour = NA),
strip.label =       function(variable, value) value,
strip.text.x =      theme_text(size = base_size * 0.8),
strip.text.y =      theme_text(size = base_size * 0.8, angle = -90),
plot.background =   theme_rect(colour = NA),
plot.title =        theme_text(size = base_size * 1.2),
plot.margin =       unit(c(1, 1, 0.5, 0.5), "lines")
), class = "options")
}
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level")) +
BaseTheme90x
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level")) +
BaseThemex90
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level")) +
BaseThemeX90
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level")) +
BaseThemeX90()
theme_blank <- function(...) {
ret <- theme_bw(...)
ret$line <- element_blank()
ret$rect <- element_blank()
ret$strip.text <- element_blank()
ret$axis.text <- element_blank()
ret$plot.title <- element_blank()
ret$axis.title <- element_blank()
ret$plot.margin <- structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit")
ret
}
BaseThemeX90 <- function(base_size = 10) {
structure(list(
axis.line =         theme_blank(),
axis.text.x =       theme_text(size = base_size * 0.8 , lineheight = 0.9, colour = "grey50", hjust = 1, angle = 90),
axis.text.y =       theme_text(size = base_size * 0.8, lineheight = 0.9, colour = "grey50", hjust = 1),
axis.ticks =        theme_segment(colour = "grey50"),
axis.title.x =      theme_text(size = base_size),
axis.title.y =      theme_text(size = base_size, angle = 90),
axis.ticks.length = unit(0.15, "cm"),
axis.ticks.margin = unit(0.1, "cm"),
legend.background = theme_rect(colour=NA),
legend.key =        theme_rect(fill = "grey95", colour = "white"),
legend.key.size =   unit(1.2, "lines"),
legend.text =       theme_text(size = base_size * 0.7),
legend.title =      theme_text(size = base_size * 0.8, face = "bold", hjust = 0),
legend.position =   "right",
panel.background =  theme_rect(fill = "grey90", colour = NA),
panel.border =      theme_blank(),
panel.grid.major =  theme_line(colour = "white"),
panel.grid.minor =  theme_line(colour = "grey95", size = 0.25),
panel.margin =      unit(0.25, "lines"),
strip.background =  theme_rect(fill = "grey80", colour = NA),
strip.label =       function(variable, value) value,
strip.text.x =      theme_text(size = base_size * 0.8),
strip.text.y =      theme_text(size = base_size * 0.8, angle = -90),
plot.background =   theme_rect(colour = NA),
plot.title =        theme_text(size = base_size * 1.2),
plot.margin =       unit(c(1, 1, 0.5, 0.5), "lines")
), class = "options")
}
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level")) +
BaseThemeX90()
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
source('~/SharedCode/DBS_analysis/DBS_CCEP_PairedPulse/dose_response_R_script.R', echo=TRUE)
source('~/SharedCode/DBS_analysis/DBS_CCEP_PairedPulse/dose_response_R_script.R', echo=TRUE)
source('~/SharedCode/DBS_analysis/DBS_CCEP_PairedPulse/dose_response_R_script.R', echo=TRUE)
source('~/SharedCode/DBS_analysis/DBS_CCEP_PairedPulse/dose_response_R_script.R', echo=TRUE)
# for pc
setwd("C:/Users/djcald.CSENETID/SharedCode/DBS_analysis/DBS_CCEP_PairedPulse")
# for mac
#setwd("/Users/djcald/DBSanalysisCode")
library('nlme')
library('ggplot2')
library('drc')
library(minpack.lm)
# for pc
setwd("C:/Users/djcald.CSENETID/SharedCode/DBS_analysis/DBS_CCEP_PairedPulse")
# for mac
#setwd("/Users/djcald/DBSanalysisCode")
library('nlme')
library('ggplot2')
library('drc')
library(minpack.lm)
sid = '08b13'
chanInt = 6
blocksInt = c(1,5)
blockNames <- c(
`1` = "Some Hospital",
`2` = "Another Hospital",
`Hospital#3` = "Hospital Number 3",
`Hospital#4` = "The Other Hospital"
)
dataPP <- read.table(paste0(sid,'_PairedPulseData.csv'),header=TRUE,sep = ",",stringsAsFactors=F, colClasses=c("stimLevelVec"="numeric","sidVec"="character"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level")) +
BaseThemeX90()
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level")) +
#ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level
#ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level))
#ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level)
#ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt & blockVec %in% blockVec))
p <- ggplot(dataInt, aes(x=stimLevelVec, y=1e6*PPvec,colour=stimLevelVec)) +
geom_jitter(width=35) +  geom_smooth(method=lm) + facet_wrap(~blockVec)
p + labs(x = expression(paste("Stimulation current ",mu,"A")),y=expression(paste("Peak to Peak magnitude ",mu,"V"),fill="stimulus level")) +
guides(colour=guide_legend("stimulation level"))
#ggsave(paste0(sid,"_",chanInt,"_",paste0(blocksInt,collapse = "_"),".png"))
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=factor(blockVec))) +
geom_violin() + geom_boxplot(width=0.1) + facet_wrap(~blockVec)
p2
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,])
summary(fit.glm)
plot(fit.glm)
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,])
summary(fit.glm)
plot(fit.glm)
dataInt = na.exclude(subset(dataPP,chanVec == chanInt))
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=factor(blockVec))) +
geom_violin() + geom_boxplot(width=0.1) + facet_wrap(~blockVec)
p2
#p + labs(x = c("Stimulation current ",expression(mu),"muA"))
#ggsave("foo.png", width=10, height=10, units="in", dpi=600)
p2 <- ggplot(dataInt, aes(x=factor(stimLevelVec), y=PPvec, fill=factor(blockVec))) +
geom_violin() + geom_boxplot(width=0.1) + facet_wrap(~blockVec)
fit.lmList = lmList(PPvec ~ stimLevelVec | as.factor(blockVec),data=dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,])
fit.glm    = glm(PPvec ~ as.factor(blockVec)+ stimLevelVec,data=dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,])
fit.lmList = lmList(PPvec ~ stimLevelVec | as.factor(blockVec),data=dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,])
fit.lmList = lmList(PPvec ~ stimLevelVec | as.factor(blockVec),data=dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,])
dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,]
fit.lmList = lmList(PPvec ~ stimLevelVec | as.factor(blockVec),data=na.exclude([dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,]))
fit.lmList = lmList(PPvec ~ stimLevelVec | as.factor(blockVec),data=na.exclude(dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,]))
summary(fit.lmList)
fit.lmList = lmList(PPvec ~ stimLevelVec | as.factor(blockVec),data=na.exclude(dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,]),pool=FALSE)
summary(fit.lmList)
fit.lmList = lmList(PPvec ~ stimLevelVec | as.factor(blockVec),data=na.exclude(dataPP[dataPP$blockVec %in% blocksInt & dataPP$chanVec==chanInt,]),pool=FALSE)
summary(fit.lmList)
(ci <- confint(fit.lmList)) # print and rather *see* :
plot(ci)                # how widely they vary for the individuals
ci
plot(ci)
plot(fit.lmList)
# for pc
setwd("C:/Users/djcald.CSENETID/SharedCode/DBS_analysis/DBS_CCEP_PairedPulse")
# for mac
#setwd("/Users/djcald/DBSanalysisCode")
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
